{"version":3,"sources":["plugins/router.tsx","plugins/i18next.ts","redux/action/login.ts","redux/reducer/login.ts","redux/store.ts","plugins/cross-fetch.ts","components/common/login-form.tsx","pages/login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["options","fallback","size","routes","link","key","iconType","text","exact","component","loadable","viewRouter","i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","enUsTrans","zh","zhCnTrans","fallbackLng","debug","interpolation","escapeValue","LOGIN_ACTION","loginActions","createActions","appUser","defaultState","undefined","createReducers","produce","draft","payload","next","state","throw","rootReducer","combineReducers","login","loginReducer","persistConfig","storage","sessionStorage","persistedReducer","persistReducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","request","url","config","fetch","then","res","json","resJson","status","Error","message","catch","error","post","data","body","JSON","stringify","headers","Accept","method","mapDispatch","onLogin","actions","connector","connect","props","t","useTranslation","history","useHistory","handleFinish","values","a","result","push","get","location","style","width","margin","onFinish","submitter","searchConfig","submitText","render","_","dom","pop","submitButtonProps","textAlign","height","marginRight","alt","src","marginTop","marginBottom","fieldProps","prefix","MobileOutlined","name","placeholder","Format","rules","required","pattern","Password","LockOutlined","Login","className","hoverable","App","client","ApolloClient","uri","process","cache","InMemoryCache","csp","nonce","locale","language","zhCN","enUS","path","map","route","propsRouter","getState","to","pathname","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f6d01927.chunk.js","sourcesContent":["import { pathToRegexp, Key, TokensToRegexpOptions } from 'path-to-regexp';\nimport loadable from '@loadable/component';\nimport { Spin } from 'antd';\n\n// #region matchPath\nconst cache: any = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\n/**\n * 路径转正则表达\n * @param path 路径\n * @param options 参数\n * @returns 参数对象\n */\nfunction compilePath(\n  path: string,\n  options: TokensToRegexpOptions\n): { regexp: RegExp; keys: Key[] } {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys: Key[] = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n * @param {string} pathname location.pathname(URL pathname)\n * @param {array<object>} paths paths to match\n * @return {object} matched path\n */\nexport function matchPath(pathname: string, paths: [any]): object {\n  return paths.reduce(\n    (matched, { path, exact = false, strict = false, sensitive = false }) => {\n      if (!path && path !== '') return null;\n      if (matched) return matched;\n\n      const { regexp, keys } = compilePath(path, {\n        end: exact,\n        strict,\n        sensitive,\n      });\n      const match = regexp.exec(pathname);\n\n      if (!match) return null;\n\n      const [url, ...values] = match;\n      const isExact = pathname === url;\n\n      if (exact && !isExact) return null;\n\n      return {\n        path, // the path used to match\n        url: path === '/' && url === '' ? '/' : url, // the matched portion of the URL\n        isExact, // whether or not we matched exactly\n        params: keys.reduce((memo: any, key, index: number) => {\n          memo[key.name] = values[index];\n          return memo;\n        }, {}),\n      };\n    },\n    null\n  );\n}\n// #endregion\n\n// #region router\nconst options = {\n  fallback: <Spin size=\"large\" />,\n};\n/**\n * 所有路由组件前端定义 导航以及权限后台获取\n */\nexport const routes = [\n  // {\n  //   link: '/login',\n  //   key: 'Login',\n  //   iconType: 'profile',\n  //   text: 'login',\n  //   exact: true,\n  //   component: loadable(() => import('../pages/login'), options),\n  // },\n  {\n    link: '/',\n    key: 'Home',\n    iconType: 'home',\n    text: 'home',\n    exact: false,\n    component: loadable(() => import('../pages/home'), options),\n  },\n];\n\n/**\n * 视图导航，根据权限获取 导航与菜单不共用数据，独立存在\n */\nexport const viewRouter = [\n  {\n    link: 'app-user/list',\n    key: 'AppUserList',\n    iconType: 'home',\n    text: 'AppUserList',\n    exact: true,\n    component: loadable(() => import('../views/app-user/list'), options),\n  },\n  {\n    link: 'app-user/',\n    key: 'AppUserAdd',\n    iconType: 'home',\n    text: 'AppUserAdd',\n    exact: true,\n    component: loadable(() => import('../views/app-user/item'), options),\n  },\n  {\n    link: 'app-user/:id',\n    key: 'AppUserEdit',\n    iconType: 'home',\n    text: 'AppUserEdit',\n    exact: true,\n    component: loadable(() => import('../views/app-user/item'), options),\n  },\n  {\n    link: 'role/list',\n    key: 'RoleList',\n    iconType: 'home',\n    text: 'RoleList',\n    exact: true,\n    component: loadable(() => import('../views/role/list'), options),\n  },\n  {\n    link: 'role/',\n    key: 'RoleAdd',\n    iconType: 'home',\n    text: 'RoleAdd',\n    exact: true,\n    component: loadable(() => import('../views/role/item'), options),\n  },\n  {\n    link: 'role/:id',\n    key: 'RoleEdit',\n    iconType: 'home',\n    text: 'RoleEdit',\n    exact: true,\n    component: loadable(() => import('../views/role/item'), options),\n  },\n  {\n    link: 'role-group/list',\n    key: 'RoleGroupList',\n    iconType: 'home',\n    text: 'RoleGroupList',\n    exact: true,\n    component: loadable(() => import('../views/role-group/list'), options),\n  },\n  {\n    link: 'role-group/',\n    key: 'RoleGroupAdd',\n    iconType: 'home',\n    text: 'RoleGroupAdd',\n    exact: true,\n    component: loadable(() => import('../views/role-group/item'), options),\n  },\n  {\n    link: 'role-group/:id',\n    key: 'RoleGroupEdit',\n    iconType: 'home',\n    text: 'RoleGroupEdit',\n    exact: true,\n    component: loadable(() => import('../views/role-group/item'), options),\n  },\n  {\n    link: 'router/list',\n    key: 'RouterList',\n    iconType: 'home',\n    text: 'RouterList',\n    exact: true,\n    component: loadable(() => import('../views/router/list'), options),\n  },\n  {\n    link: 'router/',\n    key: 'RouterAdd',\n    iconType: 'home',\n    text: 'RouterAdd',\n    exact: true,\n    component: loadable(() => import('../views/router/item'), options),\n  },\n  {\n    link: 'router/:id',\n    key: 'RouterEdit',\n    iconType: 'home',\n    text: 'RouterEdit',\n    exact: true,\n    component: loadable(() => import('../views/router/item'), options),\n  },\n  {\n    link: 'permission-configuration/router',\n    key: 'RouterConfiguration',\n    iconType: 'home',\n    text: 'RouterConfiguration',\n    exact: true,\n    component: loadable(\n      () => import('../views/permission-configuration/router'),\n      options\n    ),\n  },\n  {\n    link: 'permission-configuration/role',\n    key: 'RoleConfiguration',\n    iconType: 'home',\n    text: 'RoleConfiguration',\n    exact: true,\n    component: loadable(\n      () => import('../views/permission-configuration/role'),\n      options\n    ),\n  },\n];\n// #endregion\n\nexport default viewRouter;\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport i18n from 'i18next';\nimport enUsTrans from '../locales/en-us.json';\nimport zhCnTrans from '../locales/zh-cn.json';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(LanguageDetector) //嗅探当前浏览器语言\n  .use(initReactI18next) //init i18next\n  .init({\n    //引入资源文件\n    resources: {\n      en: {\n        translation: enUsTrans,\n      },\n      zh: {\n        translation: zhCnTrans,\n      },\n    },\n    //选择默认语言，选择内容为上述配置中的key，即en/zh\n    fallbackLng: 'zh',\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\n\nexport default i18n;\n","import { IAppUser } from '../../pages/login.type';\nimport { createActions } from 'redux-actions';\n\nexport const LOGIN_ACTION = {\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n};\n\nconst loginActions = createActions({\n  [LOGIN_ACTION.LOGIN]: (appUser: IAppUser) => appUser,\n  [LOGIN_ACTION.LOGOUT]: () => null,\n});\n\nexport default loginActions;\n","import { LOGIN_ACTION } from '../action/login';\nimport { Action, handleActions as createReducers } from 'redux-actions';\nimport { IAppUser } from 'pages/login.type';\nimport { produce } from 'immer';\nimport { Maybe } from 'graphql/jsutils/Maybe';\n\nconst defaultState = {\n  appUser: undefined as Maybe<IAppUser>,\n};\n\nexport default createReducers(\n  {\n    [LOGIN_ACTION.LOGIN]: produce(\n      (draft: typeof defaultState, { payload }: Action<Maybe<IAppUser>>) => {\n        draft.appUser = payload;\n      }\n    ),\n    // 异常处理\n    [LOGIN_ACTION.LOGOUT]: {\n      next(state: typeof defaultState) {\n        return produce((draft: typeof defaultState) => {\n          draft.appUser = undefined;\n        })(state);\n      },\n      throw(state: typeof defaultState) {\n        return state;\n      },\n    },\n  },\n  defaultState\n);\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\nimport sessionStorage from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport loginReducer from './reducer/login';\n\nexport const rootReducer = combineReducers({\n  login: loginReducer,\n});\n\n/**\n * 存储配置\n */\nconst persistConfig = {\n  key: 'login',\n  storage: sessionStorage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  compose(\n    applyMiddleware(thunk),\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n      (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport const persistor = persistStore(store as any);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n","import fetch from 'cross-fetch';\nimport { message } from 'antd';\n\nconst request = (url: string, config: any) => {\n  return fetch(url, config)\n    .then((res) => {\n      return res.json();\n    })\n    .then((resJson: any) => {\n      if (resJson.status && 200 !== resJson.status) {\n        throw Error(resJson.message);\n      }\n      return resJson;\n    })\n    .catch((error: Error) => {\n      // 公共错误处理\n      message.error(error.message);\n    });\n};\n\n// GET请求\nexport const get = (url: string) => {\n  return request(url, { method: 'GET' });\n};\n\n// POST请求\nexport const post = (url: string, data: any, config: any = {}) => {\n  return request(url, {\n    body: JSON.stringify(data),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    ...config,\n  });\n};\n","import ProForm, { ProFormText } from '@ant-design/pro-form';\nimport { MobileOutlined, LockOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport Format from 'string-format';\nimport { post } from 'plugins/cross-fetch';\nimport { RootState } from 'redux/store';\nimport actions, { LOGIN_ACTION } from 'redux/action/login';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { get } from 'lodash';\n\nconst mapState = (state: RootState) => ({\n  appUser: state.login.appUser,\n});\n\nconst mapDispatch = {\n  onLogin: actions[LOGIN_ACTION.LOGIN],\n};\n\nconst connector = connect(mapState, mapDispatch);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst LoginForm = (props: PropsFromRedux) => {\n  const { t } = useTranslation();\n\n  const history = useHistory();\n\n  /**\n   * 提交\n   */\n  const handleFinish = async (values: { phone: string; password: string }) => {\n    await post('/api/app-user/login', values).then((result) => {\n      props.onLogin(result);\n      history.push(get(history.location, 'state.from', '/'));\n    });\n  };\n\n  return (\n    <div\n      style={{\n        width: 330,\n        margin: 'auto',\n      }}\n    >\n      <ProForm\n        onFinish={handleFinish}\n        submitter={{\n          searchConfig: {\n            submitText: t('login'),\n          },\n          render: (_, dom) => dom.pop(),\n          submitButtonProps: {\n            size: 'large',\n            style: {\n              width: '100%',\n            },\n          },\n        }}\n      >\n        <h1\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          <img\n            style={{\n              height: '44px',\n              marginRight: 16,\n            }}\n            alt=\"logo\"\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\"\n          />\n          {t('User rights management center')}\n        </h1>\n        <div\n          style={{\n            marginTop: 12,\n            textAlign: 'center',\n            marginBottom: 40,\n          }}\n        >\n          {t('User rights management center')}\n        </div>\n        <ProFormText\n          fieldProps={{\n            size: 'large',\n            prefix: <MobileOutlined />,\n          }}\n          name=\"userName\"\n          placeholder={Format(t('pleaseInput'), t('phone'))}\n          rules={[\n            {\n              required: true,\n              message: Format(t('pleaseInput'), t('phone')),\n            },\n            {\n              pattern: /^1\\d{10}$/,\n              message: t('rule.phone'),\n            },\n          ]}\n        />\n        <ProFormText.Password\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: Format(t('pleaseInput'), t('password')),\n            },\n          ]}\n          fieldProps={{\n            size: 'large',\n            prefix: <LockOutlined />,\n          }}\n          placeholder={Format(t('pleaseInput'), t('password'))}\n        />\n      </ProForm>\n    </div>\n  );\n};\n\nexport default connector(LoginForm);\n","import { FC } from 'react';\nimport { Card } from 'antd';\nimport LoginForm from '../components/common/login-form';\nimport './login.less';\n\nconst Login: FC = () => (\n  <Card className=\"login-card\" hoverable>\n    <LoginForm />\n  </Card>\n);\n\nexport default Login;\n","import { ConfigProvider } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { routes } from './plugins/router';\nimport zhCN from 'antd/lib/locale/zh_CN';\nimport enUS from 'antd/lib/locale/en_US';\nimport './App.less';\nimport { useTranslation } from 'react-i18next';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { Provider } from 'react-redux';\nimport store, { persistor } from './redux/store';\nimport { FC } from 'react';\nimport Login from 'pages/login';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nconst App: FC = () => {\n  let { i18n } = useTranslation();\n\n  const client = new ApolloClient({\n    uri: process.env.REACT_APP_GRAPHQL,\n    cache: new InMemoryCache(),\n  });\n\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <ApolloProvider client={client}>\n          <ConfigProvider\n            csp={{ nonce: 'YourNonceCode' }}\n            locale={i18n.language === 'zh-CN' ? zhCN : enUS}\n          >\n            <Router>\n              <Switch>\n                <Route path=\"/login\" component={Login} exact={true} />\n                {routes.map((route) => (\n                  <Route\n                    key={route.key}\n                    path={route.link}\n                    exact={route.exact}\n                    render={(propsRouter) =>\n                      store.getState()?.login?.appUser ? (\n                        <route.component />\n                      ) : (\n                        <Redirect\n                          to={{\n                            pathname: '/login',\n                            state: { from: propsRouter.location },\n                          }}\n                        />\n                      )\n                    }\n                  />\n                ))}\n                <Redirect to=\"/\" />\n              </Switch>\n            </Router>\n          </ConfigProvider>\n        </ApolloProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './plugins/i18next';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}