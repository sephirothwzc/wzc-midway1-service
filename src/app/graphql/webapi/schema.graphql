# serverapi
type Webapi {
  id: ID
  # appName
  appName: String
  # 请求权限
  authApiState: String
  # 业务编码权限用
  businessCode: String
  # 路由编码[unique]
  code: String
  # 说明
  comment: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 显示编码
  displayCode: String
  # 显示文本
  displayTxt: String
  # 请求方法
  methodType: String
  # 路由参数
  params: JSONObject
  # 父级地址id
  parentId: String
  # 路由[unique]
  path: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  parentIdObj: Webapi
  webapiRoleWebapiId(param: QueryListParam): [WebapiRole]
}

# serverapi 分页查询返回
type WebapiList {
  count: Int!
  list: [Webapi]
}

extend type Query {
  # serverapi 总行数
  webapiCount(param: QueryListParam): Int
  # serverapi 分页查询
  webapiList(param: QueryListParam): WebapiList
  # serverapi  id 获取
  webapi(id: ID!): Webapi
  # serverapi 有条件返回
  webapiAll(param: QueryListParam): [Webapi]
}

extend type Mutation {
  # serverapi 新增
  webapiCreate(param: WebapiSaveIn!): Webapi
  # serverapi 新增 or 修改
  webapi(param: WebapiSaveIn!, must: Boolean = false): String
  # serverapi 批量 新增 or 修改
  webapiBulk(param: [WebapiSaveIn]!): [JSONObject]
  # serverapi 删除
  webapiDestroy(where: JSONObject!, limit: Int): String
  # serverapi 根据id删除
  webapiDestroyById(id: String): String
}

input WebapiSaveIn {
  id: ID
  # appName
  appName: String
  # 请求权限
  authApiState: String
  # 业务编码权限用
  businessCode: String
  # 路由编码[unique]
  code: String
  # 说明
  comment: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 显示编码
  displayCode: String
  # 显示文本
  displayTxt: String
  # 请求方法
  methodType: String
  # 路由参数
  params: JSONObject
  # 父级地址id
  parentId: String
  # 路由[unique]
  path: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  webapiParentId: [WebapiSaveIn]
  webapiRoleWebapiId: [WebapiRoleSaveIn]
  parentIdObj: WebapiSaveIn
}
