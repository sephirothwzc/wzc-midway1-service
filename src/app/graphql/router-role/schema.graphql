# 路由角色关系
type RouterRole {
  id: ID
  # appName
  appName: String
  # 权限[view view 只读可见，operation operation 可见可操作，none none 没有权限]
  authState: String
  # 业务编码权限用
  businessCode: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 备注
  remark: String
  # 角色
  roleId: String
  # 路由id
  routerId: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  roleIdObj: Role
  routerIdObj: Router
}


# 路由角色关系 分页查询返回
type RouterRoleList {
  count: Int!
  list: [RouterRole]
}

extend type Query {
  # 路由角色关系 总行数
  routerRoleCount(param: QueryListParam): Int
  # 路由角色关系 分页查询
  routerRoleList(param: QueryListParam): RouterRoleList
  # 路由角色关系  id 获取
  routerRole(id: ID!): RouterRole
  # 路由角色关系 有条件返回
  routerRoleAll(param: QueryListParam): [RouterRole]
}

extend type Mutation {
  # 路由角色关系 新增 or 修改
  routerRole(param: RouterRoleSaveIn!, must: Boolean = false): String
  # 路由角色关系 批量 新增 or 修改
  routerRoleBulk(param: [RouterRoleSaveIn]!): [JSONObject]
  # 路由角色关系 删除
  routerRoleDestroy(where: JSONObject!, limit: Int): String
  # 路由角色关系 根据id删除
  routerRoleDestroyById(id:String): String
}

input RouterRoleSaveIn {
  id: ID
  # appName
  appName: String
  # 权限[view view 只读可见，operation operation 可见可操作，none none 没有权限]
  authState: String
  # 业务编码权限用
  businessCode: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 备注
  remark: String
  # 角色
  roleId: String
  # 路由id
  routerId: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
}
