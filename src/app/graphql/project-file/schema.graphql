# 项目文件
type ProjectFile {
  id: ID
  # 业务编码权限用
  businessCode: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 文件类型
  fileType: String
  # 文件名
  imageName: String
  # 路径
  imagePath: String
  # 文件大小
  imageSize: Float
  # 文件名后缀
  imageSuffix: String
  # 域名 默认空，走config的oss url
  imageUri: String
  # 项目id
  projectId: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  projectIdObj: Project
}


# 项目文件 分页查询返回
type ProjectFileList {
  count: Int!
  list: [ProjectFile]
}

extend type Query {
  # 项目文件 总行数
  projectFileCount(param: QueryListParam): Int
  # 项目文件 分页查询
  projectFileList(param: QueryListParam): ProjectFileList
  # 项目文件  id 获取
  projectFile(id: ID!): ProjectFile
  # 项目文件 有条件返回
  projectFileAll(param: QueryListParam): [ProjectFile]
}

extend type Mutation {
  # 项目文件 新增
  projectFileCreate(param: ProjectFileSaveIn!): ProjectFileSaveIn
  # 项目文件 新增 or 修改
  projectFile(param: ProjectFileSaveIn!, must: Boolean = false): String
  # 项目文件 批量 新增 or 修改
  projectFileBulk(param: [ProjectFileSaveIn]!): [JSONObject]
  # 项目文件 删除
  projectFileDestroy(where: JSONObject!, limit: Int): String
  # 项目文件 根据id删除
  projectFileDestroyById(id: String): String
}

input ProjectFileSaveIn {
  id: ID
  # 业务编码权限用
  businessCode: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 文件类型
  fileType: String
  # 文件名
  imageName: String
  # 路径
  imagePath: String
  # 文件大小
  imageSize: Float
  # 文件名后缀
  imageSuffix: String
  # 域名 默认空，走config的oss url
  imageUri: String
  # 项目id
  projectId: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  projectIdObj: ProjectSaveIn
}
