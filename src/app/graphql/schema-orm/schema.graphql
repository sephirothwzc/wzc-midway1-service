# playground schema by ormtable id
type SchemaOrm {
  id: ID
  # 业务编码权限用
  businessCode: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 自定义表单id
  formCustomId: String
  # 自定义表单布局id
  formCustomSchemaId: String
  # 具体类型id
  ormId: String
  # 类型project、budget、contract
  ormType: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  formCustomIdObj: FormCustom
  formCustomSchemaIdObj: FormCustomSchema
}


# playground schema by ormtable id 分页查询返回
type SchemaOrmList {
  count: Int!
  list: [SchemaOrm]
}

extend type Query {
  # playground schema by ormtable id 总行数
  schemaOrmCount(param: QueryListParam): Int
  # playground schema by ormtable id 分页查询
  schemaOrmList(param: QueryListParam): SchemaOrmList
  # playground schema by ormtable id  id 获取
  schemaOrm(id: ID!): SchemaOrm
  # playground schema by ormtable id 有条件返回
  schemaOrmAll(param: QueryListParam): [SchemaOrm]
}

extend type Mutation {
  # playground schema by ormtable id 新增
  schemaOrmCreate(param: SchemaOrmSaveIn!): SchemaOrmSaveIn
  # playground schema by ormtable id 新增 or 修改
  schemaOrm(param: SchemaOrmSaveIn!, must: Boolean = false): String
  # playground schema by ormtable id 批量 新增 or 修改
  schemaOrmBulk(param: [SchemaOrmSaveIn]!): [JSONObject]
  # playground schema by ormtable id 删除
  schemaOrmDestroy(where: JSONObject!, limit: Int): String
  # playground schema by ormtable id 根据id删除
  schemaOrmDestroyById(id: String): String
}

input SchemaOrmSaveIn {
  id: ID
  # 业务编码权限用
  businessCode: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 自定义表单id
  formCustomId: String
  # 自定义表单布局id
  formCustomSchemaId: String
  # 具体类型id
  ormId: String
  # 类型project、budget、contract
  ormType: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  formCustomIdObj: FormCustomSaveIn
  formCustomSchemaIdObj: FormCustomSchemaSaveIn
}
