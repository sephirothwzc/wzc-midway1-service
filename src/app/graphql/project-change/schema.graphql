# 项目变更
type ProjectChange {
  id: ID
  # 业务编码权限用
  businessCode: String
  # 变更描述
  changeRemark: String
  # 变更类型
  changeType: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 项目id
  projectId: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  projectChangeFileProjectChangeId(param: QueryListParam): [ProjectChangeFile]
  projectIdObj: Project
}

# 项目变更 分页查询返回
type ProjectChangeList {
  count: Int!
  list: [ProjectChange]
}

extend type Query {
  # 项目变更 总行数
  projectChangeCount(param: QueryListParam): Int
  # 项目变更 分页查询
  projectChangeList(param: QueryListParam): ProjectChangeList
  # 项目变更  id 获取
  projectChange(id: ID!): ProjectChange
  # 项目变更 有条件返回
  projectChangeAll(param: QueryListParam): [ProjectChange]
}

extend type Mutation {
  # 项目变更 新增
  projectChangeCreate(param: ProjectChangeSaveIn!): ProjectChange
  # 项目变更 新增 or 修改
  projectChange(param: ProjectChangeSaveIn!, must: Boolean = false): String
  # 项目变更 批量 新增 or 修改
  projectChangeBulk(param: [ProjectChangeSaveIn]!): [JSONObject]
  # 项目变更 删除
  projectChangeDestroy(where: JSONObject!, limit: Int): String
  # 项目变更 根据id删除
  projectChangeDestroyById(id: String): String
}

input ProjectChangeSaveIn {
  id: ID
  # 业务编码权限用
  businessCode: String
  # 变更描述
  changeRemark: String
  # 变更类型
  changeType: String
  # 创建时间
  createdAt: DateTime
  # 创建人id
  createdId: String
  # 删除时间
  deletedAt: DateTime
  # 删除人id
  deletedId: String
  # 项目id
  projectId: String
  # 备注
  remark: String
  # 修改时间
  updatedAt: DateTime
  # 修改人id
  updatedId: String
  projectChangeFileProjectChangeId: [ProjectChangeFileSaveIn]
  projectIdObj: ProjectSaveIn
}
